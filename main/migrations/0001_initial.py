# Generated by Django 2.2.6 on 2019-10-26 22:25

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields
import main.user_manager
import phone_field.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('id', models.UUIDField(default=uuid.uuid4, help_text='User Database Idenifition Number', primary_key=True, serialize=False, unique=True)),
                ('email', models.EmailField(help_text='Required. Email Address', max_length=64, unique=True)),
                ('birth_date', models.DateField(blank=True, help_text='Date Of Birth', null=True)),
                ('first_name', models.CharField(help_text='Required. First Name', max_length=64)),
                ('last_name', models.CharField(blank=True, help_text='Optional. Family Name', max_length=64, null=True)),
                ('middle_name', models.CharField(blank=True, help_text='Optional. Middle Name', max_length=64, null=True)),
                ('phone_number', phone_field.models.PhoneField(blank=True, help_text='Primary Phone Number', max_length=31, null=True)),
                ('phone_number_confirmed', models.BooleanField(default=False)),
                ('birth_certificate_number', models.CharField(blank=True, help_text='Birth Certificate Number', max_length=10, null=True)),
                ('national_id_number', models.CharField(blank=True, max_length=8, null=True)),
                ('nationality', django_countries.fields.CountryField(blank=True, help_text='Country of Origin', max_length=2, null=True)),
                ('passport_number', models.CharField(blank=True, help_text='Passport Registration Number', max_length=12, null=True)),
                ('gender', models.BinaryField(blank=True, choices=[(0, 'Male'), (1, 'Female')], help_text='User Sexual Orenitation', max_length=1, null=True)),
                ('avatar', models.ImageField(default='/static/avatars/default.jpg', upload_to='static/avatars/')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', main.user_manager.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit', models.CharField(blank=True, max_length=8, null=True)),
                ('complex_name', models.CharField(blank=True, max_length=64, null=True)),
                ('street', models.CharField(max_length=64)),
                ('area', models.CharField(max_length=64)),
                ('nearby_landmark', models.CharField(blank=True, max_length=64, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CareTaker',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('overall_rating', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Overall Rating', max_digits=3, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('7.00'))])),
            ],
            bases=('main.user',),
            managers=[
                ('objects', main.user_manager.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Submisssion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.CharField(max_length=512, null=True)),
                ('status', models.BinaryField(choices=[(None, 'Pending Approval'), (1, 'Rejected'), (2, 'Approved')], default=None, null=True)),
                ('by', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main.CareTaker')),
            ],
        ),
        migrations.CreateModel(
            name='Parent',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('favorite_caretakers', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main.CareTaker')),
                ('residence', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main.Location')),
            ],
            options={
                'permissions': [('can_book_apppointment', 'Can Book Gig')],
            },
            bases=('main.user',),
            managers=[
                ('objects', main.user_manager.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Gig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_propsed', models.DateTimeField(auto_now_add=True)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('notes', models.CharField(max_length=512, null=True)),
                ('submissions', models.ManyToManyField(to='main.Submisssion')),
                ('by', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main.Parent')),
            ],
        ),
    ]
